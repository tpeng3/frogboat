{"version":3,"sources":["webpack://gatsby-starter-typescript-deluxe/./src/components/CharacterPage/secret.tsx","webpack://gatsby-starter-typescript-deluxe/./src/components/CharacterPage/index.tsx","webpack://gatsby-starter-typescript-deluxe/./src/components/Relationships/index.tsx","webpack://gatsby-starter-typescript-deluxe/./src/components/Notes/index.tsx","webpack://gatsby-starter-typescript-deluxe/./src/components/TabContainer/index.tsx","webpack://gatsby-starter-typescript-deluxe/./src/pages/oc/onm/jun.tsx"],"names":["REDACTED_STR","RedactedString","styled","COLORS","Secret","redacted","format","redactionComplete","useSystemStore","state","setRedactedComplete","useState","split","map","char","len","charCodeAt","fill","Array","Name","AboutContainer","media","AboutDescription","Quote","MainImage","title","quote","description","mainImg","isTablet","useWindowSize","src","alt","className","includes","PortraitIcon","Description","Bubble","hexToRGBA","props","theme","currentTheme","secondaryColor","elevation","Testimony","motion","keyName","relationshipData","testimonyVariants","enter","order","x","opacity","visibility","transition","type","stiffness","velocity","center","variants","delay","staggerChildren","delayChildren","initial","animate","chara","i","key","custom","Link","to","content","charKey","link","icon","testimony","TriviaContainer","font","Notes","otherData","fact","length","tabTypes","ButtonContainer","TabButton","selected","primaryColor","Container","default","tabs","imageData","GALLERY","selectedTab","setSelectedTab","setDirection","tab","onClick","handleTabChange","toLowerCase","layout","RELATIONSHIPS","Gallery","NOTES","getCurrentTab","CHARA_KEY","OCPage","data","relationships","facts","allImageDataJson","nodes"],"mappings":"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","file":"component---src-pages-oc-onm-jun-tsx-f8834741f1a7056d8065.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"@util/constants\";\nimport useSystemStore from \"@store/system\";\n\nexport const REDACTED_STR =\n  \"[the following content is unavailable to the public]\";\n\nconst RedactedString = styled.div`\n  margin-right: 1rem;\n  word-break: break-all;\n  p {\n    font-family: \"Courier New\";\n    color: ${COLORS.black};\n    /* filter: blur(3px); */\n    /* -webkit-filter: blur(3px); */\n  }\n`;\n\ninterface Props {\n  format: string;\n}\n\nexport default function Secret({ format }: Props) {\n  // for now use the title to generate a string array of empty chars\n  const getStringArrays = (redacted = false) => {\n    const numbers = format.split(\"\").map((char) => {\n      const len = (char.charCodeAt(0) % 23) + 8;\n      const fill = redacted ? \"█\" : \" \";\n      return new Array(len).fill(fill);\n    });\n    return numbers;\n  };\n\n  const redactionComplete = useSystemStore((state) => state.redactionComplete);\n  const setRedactedComplete = useSystemStore(\n    (state) => state.setRedactedComplete\n  );\n  const [stringList, setStringList] = useState(\n    getStringArrays(redactionComplete)\n  );\n  const [totalTime, setTotalTime] = useState(0);\n  const [animRef, setAnimRef] = useState<any>(null);\n  const ANIM_INTERVAL = 60;\n  const ANIM_FINISH = 1800;\n  const WEIGHTS = [\n    \"文\",\n    \"字\",\n    \"化\",\n    \"け\",\n    \"％\",\n    \"！\",\n    \"＠\",\n    \"。\",\n    \"あ\",\n    \"０\",\n    \"ｓ\",\n    \"死\",\n    \"殺\",\n    \"人\",\n    \"じ\",\n    \"っ\",\n    \"ら\",\n    \"愛\",\n    \"神\",\n    \"秘\",\n    \"み\",\n    \"つ\",\n    \"希\",\n    \"望\",\n    \"Ａ\",\n    \"a\",\n    \"＃\",\n    \"＄\",\n    \"ア\",\n  ];\n\n  // useEffect(() => {\n  //   if (!redactionComplete) {\n  //     const anim = setInterval(() => setTotalTime(totalTime => totalTime + ANIM_INTERVAL), ANIM_INTERVAL);\n  //     setAnimRef(animRef);\n  //     return () => {\n  //       clearInterval(anim);\n  //     }\n  //   }\n  //   return\n  // }, []);\n\n  // useEffect(() => {\n  //   if (totalTime < 1800 - 60) {\n  //     const newList = stringList.map((str) => {\n  //       const newStr = str.map(char => {\n  //         if (char == \"█\") {\n  //           return \"█\";\n  //         }\n  //         return Math.random() < 0.3 ? \"█\" : WEIGHTS[Math.floor(Math.random() * WEIGHTS.length)];\n  //       })\n  //       return newStr;\n  //     })\n  //     setStringList(newList);\n  //   } else {\n  //     setStringList(getStringArrays(true));\n  //     setRedactedComplete(true);\n  //     animRef && clearInterval(animRef);\n  //   }\n  // }, [totalTime]);\n\n  return (\n    <RedactedString>\n      <p>\n        {/* {stringList.map(str => str.join(\"\") + (str.length % 10 !== 0 ? \"　\" : `\\n\\n`))} */}\n      </p>\n    </RedactedString>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useWindowSize from \"@util/screen\";\nimport { media } from \"@util/helpers\";\nimport { SlideFromRight } from \"@components/StyledContainers\";\nimport Secret, { REDACTED_STR } from \"./secret\";\n\nconst Name = styled.h1`\n  margin: 1rem 4rem;\n`;\n\nconst AboutContainer = styled.div`\n  margin: 2rem 4rem;\n  display: flex;\n  flex-direction: column;\n  p {\n    white-space: pre-line;\n    text-align: left;\n    ${media.laptop`\n      margin-right: 2rem;\n    `}\n  }\n  ${media.laptop`\n    flex-direction: row;\n    margin-bottom: 2rem;\n  `}\n`;\n\nconst AboutDescription = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 3rem;\n  ${media.laptop`\n    flex-grow: 1;\n    flex-direction: column;\n    margin-bottom: 0rem;\n  `}\n`;\n\nconst Quote = styled.span`\n  font-style: italic;\n  text-align: center;\n  align-self: center;\n  margin-left: 2rem;\n  ${media.laptop`\n    width: clamp(0px, 32vw, 380px);\n    margin-left: 0rem;\n    margin-bottom: 2rem;\n  `}\n`;\n\nconst MainImage = styled.img`\n  width: 32vw;\n  max-height: 480px;\n  background-color: #fff;\n  border-radius: 1vw;\n  object-fit: cover;\n  ${media.desktop`\n    width: 320px;\n    height: 480px;\n  `}\n`;\n\ninterface CharacterProps {\n  title: string;\n  quote: string;\n  description: string;\n  mainImg?: string;\n}\n\nconst CharacterAbout = ({\n  title,\n  quote,\n  description,\n  mainImg,\n}: CharacterProps) => {\n  const { isTablet } = useWindowSize();\n\n  return (\n    <SlideFromRight>\n      <Name>{title}</Name>\n      <hr />\n      {isTablet ? (\n        <AboutContainer>\n          <AboutDescription>\n            {mainImg && <MainImage src={mainImg} alt={`${title} image`} />}\n            <Quote className=\"accent\">{quote}</Quote>\n          </AboutDescription>\n          <p>{description}</p>\n          {description === REDACTED_STR && <Secret format={title} />}\n        </AboutContainer>\n      ) : (\n        <AboutContainer>\n          <AboutDescription>\n            <Quote className=\"accent\">{quote}</Quote>\n            <p>{!description.includes(REDACTED_STR) && description}</p>\n            {description.includes(REDACTED_STR) && <Secret format={title} />}\n          </AboutDescription>\n          {mainImg && <MainImage src={mainImg} alt={`${title} image`} />}\n        </AboutContainer>\n      )}\n    </SlideFromRight>\n  );\n};\n\nexport default CharacterAbout;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSystemStore from \"@store/system\";\nimport {\n  motion,\n  AnimatePresence,\n  Variants,\n  AnimateSharedLayout,\n} from \"framer-motion\";\nimport useWindowSize from \"@util/screen\";\nimport Link from \"@components/Link\";\nimport { hexToRGBA, media, elevation } from \"@util/helpers\";\nimport { COLORS } from \"@util/constants\";\nimport content from \"./content.yaml\";\n\nconst PortraitIcon = styled.img`\n  position: relative;\n  height: 100px;\n  width: 100px;\n  border-radius: 100%;\n  object-fit: cover;\n  top: -50px;\n  right: -20px;\n  background-color: ${COLORS.white};\n  ${media.laptop`\n    position: initial;\n    height: 150px;\n    width: 150px;\n  `}\n`;\n\nconst Description = styled.p`\n  margin: 2rem;\n  align-self: center;\n  flex: 1;\n`;\n\nconst Bubble = styled.div<{ currentTheme: string }>`\n  display: flex;\n  border-radius: 10px;\n  width: 100%;\n  background-color: ${hexToRGBA(COLORS.GREY_200, 0.2)};\n  transition: all 200ms ease;\n  ${media.laptop`\n    height: 150px;\n    border-radius: 150px;\n    width: 700px;\n  `}\n  :hover {\n    background-color: ${(props) =>\n      props.theme[props.currentTheme].secondaryColor};\n    transform: scale(1.02);\n    ${(props) => elevation(1, props.theme[props.currentTheme].secondaryColor)};\n  }\n`;\n\nconst Testimony = styled(motion.div)`\n  display: flex;\n  ${media.laptop`\n    &:nth-child(2n) {\n      justify-content: flex-end;\n      ${Bubble} {\n        flex-direction: row-reverse;\n      }\n    }\n  `}\n\n  &:not(:last-child) {\n    margin-bottom: 6rem;\n    ${media.laptop`\n      margin-bottom: 2rem;\n    `}\n  }\n`;\n\ninterface Props {\n  keyName: string;\n  relationshipData: any;\n}\n\nconst Relationships = (props: Props) => {\n  const { keyName, relationshipData } = props;\n  const currentTheme = useSystemStore((state) => state.currentTheme);\n  const { isTablet } = useWindowSize();\n\n  const containerVariants: Variants = {\n    center: {\n      transition: { delay: 4, staggerChildren: 0.2, delayChildren: 0.5 },\n    },\n  };\n\n  const testimonyVariants: Variants = {\n    enter: (order: number) => ({\n      x: order % 2 === 0 ? -100 : 100,\n      opacity: 0,\n      visibility: \"visible\",\n      transition: {\n        x: { type: \"easeIn\", stiffness: 1000, velocity: 0 },\n      },\n    }),\n    center: {\n      x: 0,\n      opacity: 1,\n      visibility: \"visible\",\n      transition: {\n        x: { type: \"easeIn\", stiffness: 1000, velocity: 0 },\n      },\n    },\n  };\n\n  return (\n    <motion.div variants={containerVariants} initial=\"enter\" animate=\"center\">\n      {relationshipData.map((chara, i) => (\n        <Testimony\n          key={`${chara}-${i}`}\n          custom={i}\n          variants={testimonyVariants}\n        >\n          <Link to={content[chara.charKey].link}>\n            <Bubble currentTheme={currentTheme}>\n              <PortraitIcon\n                src={content[chara.charKey].icon}\n                alt={`${chara.charKey}-icon`}\n              />\n              {/* <StyledIcon src={HomeIcon} alt={\"home icon\"} /> */}\n              <Description>{chara.testimony}</Description>\n            </Bubble>\n          </Link>\n        </Testimony>\n      ))}\n    </motion.div>\n  );\n};\n\nexport default Relationships;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport Link from \"@components/Link\";\nimport { font } from \"@util/helpers\";\n\nconst TriviaContainer = styled(motion.div)`\n  h5 {\n    ${font(\"1.8rem\", \"2rem\", \"400\", \"1.75px\")}\n    margin: 1.5rem 0;\n  }\n  li {\n    ${font(\"1rem\", \"2rem\", \"400\", \"normal\")}\n    &:last-child {\n      font-style: italic;\n    }\n  }\n`;\n\ninterface Props {\n  otherData: any;\n}\n\nexport default function Notes(props: Props) {\n  const { otherData } = props;\n\n  return (\n    <div>\n      <TriviaContainer>\n        <h5>Trivia</h5>\n        {otherData.map((fact, i) =>\n          i === otherData.length - 1 ? (\n            <li className=\"accent\">{fact}</li>\n          ) : (\n            <li>{fact}</li>\n          )\n        )}\n      </TriviaContainer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSystemStore from \"@store/system\";\nimport {\n  motion,\n  AnimatePresence,\n  Variants,\n  AnimateSharedLayout,\n} from \"framer-motion\";\nimport useWindowSize from \"@util/screen\";\nimport { media, hexToRGBA } from \"@util/helpers\";\nimport { COLORS } from \"@util/constants\";\nimport { ThemeTypes } from \"@components/Layout\";\nimport Relationships from \"@components/Relationships\";\nimport Gallery from \"@components/Gallery\";\nimport Notes from \"@components/Notes\";\nimport { imageDataProps, RelationshipDataProps } from \"@util/types\";\n\nconst ButtonContainer = styled(motion.div)`\n  display: flex;\n  flex-direction: row;\n  margin: 2rem 4rem 0rem 4rem;\n  justify-content: center;\n  ${media.laptop`\n    justify-content: flex-start;\n  `}\n`;\n\nconst TabButton = styled.button<{ currentTheme: string; selected: boolean }>`\n  border: 1px solid ${(props) => props.theme[props.currentTheme].secondaryColor};\n  cursor: pointer;\n  background-color: ${(props) =>\n    props.selected\n      ? props.theme[props.currentTheme].secondaryColor\n      : \"transparent\"};\n  display: flex;\n  justify-content: center;\n  border-radius: 6px 6px 0 0;\n  min-width: 8rem;\n  color: ${COLORS.white};\n  padding: 0.2rem 1rem;\n  text-transform: capitalize;\n  :hover {\n    background-color: ${(props) =>\n      props.selected\n        ? props.theme[props.currentTheme].primaryColor\n        : hexToRGBA(COLORS.GREY_HOVER, 0.7)};\n  }\n`;\n\nconst Container = styled(motion.div)<{ currentTheme: string }>`\n  border: 1px solid\n    ${(props) =>\n      props.currentTheme\n        ? props.theme[props.currentTheme].secondaryColor\n        : props.theme.default.secondaryColor};\n  border-radius: 12px;\n  color: ${COLORS.white};\n  padding: 4rem 1rem;\n  min-height: 500px;\n  ${media.laptop`\n    padding: 2rem 4rem;\n  `}\n`;\n\nexport enum tabTypes {\n  RELATIONSHIPS,\n  GALLERY,\n  NOTES,\n}\n\ninterface CharacterProps {\n  keyName: string;\n  tabs: tabTypes[];\n  relationshipData?: RelationshipDataProps; // if relationship\n  imageData?: imageDataProps[]; // if gallery\n  otherData?: any; // if notes\n}\n\nconst TabContainer = (props: CharacterProps) => {\n  const { keyName, tabs, imageData, relationshipData, otherData } = props;\n  const { isTablet } = useWindowSize();\n  const currentTheme = useSystemStore((state) => state.currentTheme);\n  const [selectedTab, setSelectedTab] = useState<tabTypes>(tabTypes.GALLERY);\n  const [direction, setDirection] = useState<number>(0);\n\n  const handleTabChange = (tab: tabTypes, i: number) => {\n    setDirection(i > selectedTab ? 1 : -1);\n    setSelectedTab(tab);\n  };\n\n  const getCurrentTab = () => {\n    switch (selectedTab) {\n      case tabTypes.RELATIONSHIPS:\n        return (\n          relationshipData && (\n            <Relationships\n              keyName={keyName}\n              relationshipData={relationshipData}\n            />\n          )\n        );\n      case tabTypes.GALLERY:\n        return imageData && <Gallery imageData={imageData} />;\n      case tabTypes.NOTES:\n        return otherData && <Notes otherData={otherData} />;\n    }\n  };\n\n  return (\n    <div>\n      <ButtonContainer>\n        {tabs.map((tab, i) => (\n          <TabButton\n            onClick={() => handleTabChange(tab, i)}\n            key={tab}\n            currentTheme={currentTheme}\n            selected={selectedTab === tab}\n          >\n            {tabTypes[tab].toLowerCase()}\n          </TabButton>\n        ))}\n      </ButtonContainer>\n      <AnimateSharedLayout>\n        <Container currentTheme={currentTheme} layout>\n          <motion.div\n            key={selectedTab}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { delay: 0.5 } }}\n          >\n            {getCurrentTab()}\n          </motion.div>\n        </Container>\n      </AnimateSharedLayout>\n    </div>\n  );\n};\n\nexport default TabContainer;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { imageDataProps } from \"@util/types\";\nimport { SEO } from \"@components/seo\";\nimport CharacterAbout from \"@components/CharacterPage\";\nimport TabContainer, { tabTypes } from \"@components/TabContainer\";\nimport { PageTransition } from \"@components/StyledContainers\";\nimport content from \"./content.yaml\";\n\nconst CHARA_KEY = \"oc jun\";\n\ninterface Props {\n  data: {\n    allImageDataJson: {\n      nodes: imageDataProps;\n    };\n  };\n}\n\nexport default function OCPage(props: Props) {\n  const { data } = props;\n  return (\n    <PageTransition>\n      {/* figure out SEO later, if not never */}\n      <SEO {...content[CHARA_KEY]} />\n      <CharacterAbout {...content[CHARA_KEY]} />\n      <hr />\n      <TabContainer\n        keyName={CHARA_KEY}\n        tabs={[tabTypes.GALLERY, tabTypes.RELATIONSHIPS, tabTypes.NOTES]}\n        relationshipData={content[CHARA_KEY].relationships}\n        otherData={content[CHARA_KEY].facts}\n        imageData={data.allImageDataJson.nodes}\n      />\n    </PageTransition>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allImageDataJson(\n      filter: { tags: { elemMatch: { key: { eq: \"oc jun\" } } } }\n    ) {\n      nodes {\n        comment\n        date\n        fileName\n        filePaths\n        id\n        key\n        mimeType\n        name\n        order\n        tags {\n          color\n          key\n          name\n          type\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}